operation Collection sort() : Collection {
	var sequence = self.asSequence();
	return sequence.sortBy(element : Element | element.elementIdx);
}

operation Element getAttributes() : String {
	self.println();
	var attributes = Map {
		// 'isAutoGenerated'=Integer,
		'text'=String,
		'font'=String,
		'fontSize'=Real,
		'isUppercase'=Boolean,
		'isBold'=Boolean,
		'isItalic'=Boolean,
		'hAlignment'="Enum"
		// 'color'=ThemeColor
	};
	var results = "";
	
	for(key in attributes.keySet()) {
		key.println();
		if(self.hasProperty(key)) {
			("has prop " + key).println();
			var value = attributes.get(key);
			var feature = self.eClass().getEStructuralFeature(key);
			var attr = self.eGet(feature);
			
			results += "    '" + key + "': ";
			switch(value) {
				case String: results += "'" + attr + "'";
				case Real:
				case Integer:
				case Boolean: results += attr;
				case "Enum": results += key + "." + attr.name;
				default: continue;
			}
			results += ",\n";
		}
	}
	return results;
}