/**
 */
package resume_template;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Text Element</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link resume_template.TextElement#getIsAutoGenerated <em>Is Auto Generated</em>}</li>
 *   <li>{@link resume_template.TextElement#getText <em>Text</em>}</li>
 *   <li>{@link resume_template.TextElement#getFont <em>Font</em>}</li>
 *   <li>{@link resume_template.TextElement#getFontSize <em>Font Size</em>}</li>
 *   <li>{@link resume_template.TextElement#isIsUppercase <em>Is Uppercase</em>}</li>
 *   <li>{@link resume_template.TextElement#isIsBold <em>Is Bold</em>}</li>
 *   <li>{@link resume_template.TextElement#isIsItalic <em>Is Italic</em>}</li>
 *   <li>{@link resume_template.TextElement#getHAlignment <em>HAlignment</em>}</li>
 *   <li>{@link resume_template.TextElement#getColor <em>Color</em>}</li>
 * </ul>
 *
 * @see resume_template.Resume_templatePackage#getTextElement()
 * @model abstract="true"
 * @generated
 */
public interface TextElement extends Element {
	/**
	 * Returns the value of the '<em><b>Is Auto Generated</b></em>' attribute.
	 * The default value is <code>"0"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Auto Generated</em>' attribute.
	 * @see #setIsAutoGenerated(int)
	 * @see resume_template.Resume_templatePackage#getTextElement_IsAutoGenerated()
	 * @model default="0"
	 * @generated
	 */
	int getIsAutoGenerated();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#getIsAutoGenerated <em>Is Auto Generated</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Auto Generated</em>' attribute.
	 * @see #getIsAutoGenerated()
	 * @generated
	 */
	void setIsAutoGenerated(int value);

	/**
	 * Returns the value of the '<em><b>Text</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Text</em>' attribute.
	 * @see #setText(String)
	 * @see resume_template.Resume_templatePackage#getTextElement_Text()
	 * @model
	 * @generated
	 */
	String getText();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#getText <em>Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Text</em>' attribute.
	 * @see #getText()
	 * @generated
	 */
	void setText(String value);

	/**
	 * Returns the value of the '<em><b>Font</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Font</em>' attribute.
	 * @see #setFont(String)
	 * @see resume_template.Resume_templatePackage#getTextElement_Font()
	 * @model
	 * @generated
	 */
	String getFont();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#getFont <em>Font</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Font</em>' attribute.
	 * @see #getFont()
	 * @generated
	 */
	void setFont(String value);

	/**
	 * Returns the value of the '<em><b>Font Size</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Font Size</em>' attribute.
	 * @see #setFontSize(double)
	 * @see resume_template.Resume_templatePackage#getTextElement_FontSize()
	 * @model
	 * @generated
	 */
	double getFontSize();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#getFontSize <em>Font Size</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Font Size</em>' attribute.
	 * @see #getFontSize()
	 * @generated
	 */
	void setFontSize(double value);

	/**
	 * Returns the value of the '<em><b>Is Uppercase</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Uppercase</em>' attribute.
	 * @see #setIsUppercase(boolean)
	 * @see resume_template.Resume_templatePackage#getTextElement_IsUppercase()
	 * @model default="false"
	 * @generated
	 */
	boolean isIsUppercase();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#isIsUppercase <em>Is Uppercase</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Uppercase</em>' attribute.
	 * @see #isIsUppercase()
	 * @generated
	 */
	void setIsUppercase(boolean value);

	/**
	 * Returns the value of the '<em><b>Is Bold</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Bold</em>' attribute.
	 * @see #setIsBold(boolean)
	 * @see resume_template.Resume_templatePackage#getTextElement_IsBold()
	 * @model default="false"
	 * @generated
	 */
	boolean isIsBold();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#isIsBold <em>Is Bold</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Bold</em>' attribute.
	 * @see #isIsBold()
	 * @generated
	 */
	void setIsBold(boolean value);

	/**
	 * Returns the value of the '<em><b>Is Italic</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Italic</em>' attribute.
	 * @see #setIsItalic(boolean)
	 * @see resume_template.Resume_templatePackage#getTextElement_IsItalic()
	 * @model default="false"
	 * @generated
	 */
	boolean isIsItalic();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#isIsItalic <em>Is Italic</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Italic</em>' attribute.
	 * @see #isIsItalic()
	 * @generated
	 */
	void setIsItalic(boolean value);

	/**
	 * Returns the value of the '<em><b>HAlignment</b></em>' attribute.
	 * The literals are from the enumeration {@link resume_template.HAlignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>HAlignment</em>' attribute.
	 * @see resume_template.HAlignment
	 * @see #setHAlignment(HAlignment)
	 * @see resume_template.Resume_templatePackage#getTextElement_HAlignment()
	 * @model
	 * @generated
	 */
	HAlignment getHAlignment();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#getHAlignment <em>HAlignment</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>HAlignment</em>' attribute.
	 * @see resume_template.HAlignment
	 * @see #getHAlignment()
	 * @generated
	 */
	void setHAlignment(HAlignment value);

	/**
	 * Returns the value of the '<em><b>Color</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Color</em>' reference.
	 * @see #setColor(ThemeColor)
	 * @see resume_template.Resume_templatePackage#getTextElement_Color()
	 * @model annotation="gmf.link target.decoration='arrow' style='dash'"
	 * @generated
	 */
	ThemeColor getColor();

	/**
	 * Sets the value of the '{@link resume_template.TextElement#getColor <em>Color</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Color</em>' reference.
	 * @see #getColor()
	 * @generated
	 */
	void setColor(ThemeColor value);

} // TextElement
